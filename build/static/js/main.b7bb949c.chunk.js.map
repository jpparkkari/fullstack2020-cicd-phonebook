{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","value","onChange","PersonForm","onSubmit","nameValue","nameHandler","numberValue","numberHandler","type","Persons","persons","removePerson","map","person","name","number","onClick","id","baseUrl","axios","get","then","response","data","newPerson","post","delete","put","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","showAll","setShowAll","setMessage","useEffect","personService","returnedPerson","personsToShow","filter","toLowerCase","includes","event","target","length","preventDefault","personFound","find","window","confirm","changedPerson","setTimeout","catch","error","p","console","log","concat","ReactDOM","render","document","getElementById"],"mappings":"gMAaeA,EAXA,SAACC,GACd,OACE,oDACE,uBACEC,MAAOD,EAAMC,MAAOC,SAAUF,EAAME,eCgB7BC,EApBI,SAACH,GAClB,OACE,uBAAMI,SAAUJ,EAAMI,SAAtB,UACA,2CACA,uCACE,uBACEH,MAAOD,EAAMK,UAAWH,SAAUF,EAAMM,iBAG5C,yCACE,uBACEL,MAAOD,EAAMO,YAAaL,SAAUF,EAAMQ,mBAG9C,8BAAK,wBAAQC,KAAK,SAAb,uBCAMC,EAdC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAC1B,OACE,6BACGD,EAAQE,KAAI,SAACC,GAAD,OACX,mCAAwBA,EAAOC,KAA/B,IAAsCD,EAAOE,OAC3C,wBAAQC,QAAU,kBAAML,EAAaE,EAAOI,KAA5C,sBADOJ,EAAOC,Y,gBCJlBI,EAAU,eAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAN,GAEb,OADgBE,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BD,KAS9B,EALA,SAACA,EAAIO,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBD,GAAMO,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCP5BK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKC,UAAU,eAAf,SACGD,KCiKQE,G,MAlKH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRtB,EADQ,KACCuB,EADD,OAGgBD,mBAAS,IAHzB,mBAGRE,EAHQ,KAGCC,EAHD,OAIoBH,mBAAS,IAJ7B,mBAIRI,EAJQ,KAIGC,EAJH,OAKoBL,mBAAS,IAL7B,mBAKRM,EALQ,KAKGC,EALH,OAMgBP,oBAAS,GANzB,mBAMRQ,EANQ,KAMCC,EAND,OAOeT,mBAAS,MAPxB,mBAORH,EAPQ,KAOCa,EAPD,KAShBC,qBAAU,WACRC,IAEGvB,MAAM,SAAAwB,GACLZ,EAAWY,QAGd,IAEH,IA0GMC,EAAgBN,EAClB9B,EACAA,EAAQqC,QAAO,SAAAlC,GAAM,OAAIA,EAAOC,KAAKkC,cAAcC,SAASX,EAAUU,kBAE1E,OACE,gCAEE,2CACA,cAAC,EAAD,CAAcnB,QAASA,IACvB,cAAC,EAAD,CACE7B,MAAOsC,EACPrC,SA1CqB,SAACiD,GAE1BX,EAAaW,EAAMC,OAAOnD,OAC1ByC,EAAyC,IAA9BS,EAAMC,OAAOnD,MAAMoD,WA0C5B,cAAC,EAAD,CACEjD,SAzHY,SAAC+C,GACjBA,EAAMG,iBAEN,IAAMC,EAAc5C,EAAQ6C,MAAK,SAAA1C,GAAM,OAAIA,EAAOC,OAASoB,KAC3D,GAAKoB,GAyBH,GAAGE,OAAOC,QAAP,UAAkBvB,EAAlB,sDAAuEoB,EAAYvC,OAAnF,oDAAqIqB,EAArI,MAAmJ,CAEpJ,IAAMsB,EAAa,2BAAQJ,GAAR,IAAqBvC,OAAQqB,IAChDQ,EACUU,EAAYrC,GAAIyC,GACvBrC,MAAK,SAAAwB,GACJZ,EAAWvB,EAAQE,KAAI,SAAAC,GAAM,OAAIA,EAAOI,KAAOqC,EAAYrC,GAAKJ,EAASgC,MACzEH,EAAW,uBAAD,OACeY,EAAYxC,KAD3B,MAGV6C,YAAW,WACTjB,EAAW,QACV,QAEJkB,OAAM,SAAAC,GACLnB,EAAW,eAAD,OAAiBY,EAAYxC,KAA7B,sCACV6C,YAAW,WACTjB,EAAW,QACV,KACHT,EAAWvB,EAAQqC,QAAO,SAAAe,GAAC,OAAIA,EAAE7C,KAAOqC,EAAYrC,OACpD8C,QAAQC,IAAIH,YApClBjB,EAPqB,CACnB9B,KAAMoB,EACNnB,OAAQqB,IAOPf,MAAK,SAAAwB,GACJZ,EAAWvB,EAAQuD,OAAOpB,IAC1BH,EAAW,UAAD,OACEG,EAAe/B,KADjB,MAGV6C,YAAW,WACTjB,EAAW,QACV,QAmCTP,EAAW,IACXE,EAAa,KAgETjC,UAAW8B,EACX5B,YAAa8B,EACb/B,YA9DmB,SAAC6C,GAExBf,EAAWe,EAAMC,OAAOnD,QA6DpBO,cAzDqB,SAAC2C,GAE1Bb,EAAaa,EAAMC,OAAOnD,UA0DxB,yCAEA,cAAC,EAAD,CACEU,QAASoC,EACTnC,aAlDmB,SAACM,GAEpBuC,OAAOC,QAAP,kBAA0B/C,EAAQ6C,MAAK,SAAAO,GAAC,OAAIA,EAAE7C,KAAKA,KAAIH,KAAvD,SACF8B,EACU3B,GACPI,KAAKY,EAAWvB,EAAQqC,QAAO,SAAAe,GAAC,OAAIA,EAAE7C,KAAOA,OAC7CI,KACCqB,EAAW,YAAD,OAAahC,EAAQ6C,MAAK,SAAAO,GAAC,OAAIA,EAAE7C,KAAOA,KAAIH,KAA5C,MACV6C,YAAW,WACTjB,EAAW,QACV,MAGJkB,OAAM,SAAAC,GACLnB,EAAW,8CACXiB,YAAW,WACTjB,EAAW,QACV,KACHT,EAAWvB,EAAQqC,QAAO,SAAAe,GAAC,OAAIA,EAAE7C,KAAOA,MACxC8C,QAAQC,IAAIH,cC3HtBK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b7bb949c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n  return(\n    <div>filter shown with\n      <input\n        value={props.value} onChange={props.onChange}\n      />\n\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n    <h2>add a new</h2>\n    <div>name\n      <input \n        value={props.nameValue} onChange={props.nameHandler}\n      />\n    </div>\n    <div>number\n      <input\n        value={props.numberValue} onChange={props.numberHandler}\n      />\n    </div>\n    <div><button type=\"submit\">add</button></div>\n    </form>\n  )\n\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ persons, removePerson }) => {\n  return (\n    <ul>\n      {persons.map((person) =>\n        <li key={person.name}> {person.name} {person.number}\n          <button onClick={ () => removePerson(person.id)}>delete</button>\n        </li>\n      )}\n    </ul>\n  )\n\n    \n}\n\nexport default Persons","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request\n}\n\nconst update = (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport './App.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ showAll, setShowAll ] = useState(true)\n  const [ message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then( returnedPerson => {\n        setPersons(returnedPerson)\n      })\n\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    //console.log('button pressed', event.target)\n    const personFound = persons.find(person => person.name === newName)\n    if (!personFound) {\n\n      const personObject = {\n        name: newName,\n        number: newNumber,\n\n      }\n\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setMessage(\n            `Added '${returnedPerson.name}'`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n\n\n    }\n    else {\n\n      if(window.confirm(`${newName} is already added to phonebook with number ${personFound.number}. Do you want to replace the number with ${newNumber}?`)){\n\n        const changedPerson = { ...personFound, number: newNumber }\n        personService\n          .update(personFound.id, changedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== personFound.id ? person : returnedPerson))\n            setMessage(\n              `Updated number for '${personFound.name}'`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setMessage( `the person '${personFound.name}' was already deleted from server`)\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            setPersons(persons.filter(p => p.id !== personFound.id))\n            console.log(error)\n          })\n\n\n\n      }\n\n    }\n    setNewName('')\n    setNewNumber('')\n\n  }\n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n\n  }\n\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value)\n\n  }\n\n\n  const handleFilterChange = (event) => {\n\n    setNewFilter(event.target.value)\n    setShowAll(event.target.value.length === 0)\n\n  }\n\n  const deletePersonById = (id) => {\n    //console.log(\"person \" + event + \" needs to be deleted\" )\n    if (window.confirm(`Delete '${persons.find(p => p.id===id).name}' ?`)) {\n      personService\n        .remove(id)\n        .then(setPersons(persons.filter(p => p.id !== id)))\n        .then(\n          setMessage(`Deleted '${persons.find(p => p.id === id).name}'`),\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        )\n\n        .catch(error => {\n          setMessage('the person was already deleted from server')\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setPersons(persons.filter(p => p.id !== id))\n          console.log(error)\n        })\n    }\n  }\n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  return (\n    <div>\n\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter\n        value={newFilter}\n        onChange={handleFilterChange}\n      />\n\n      <PersonForm\n        onSubmit={addPerson}\n        nameValue={newName}\n        numberValue={newNumber}\n        nameHandler={handleNameChange}\n        numberHandler={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons\n        persons={personsToShow}\n        removePerson = {deletePersonById}\n      />\n\n\n\n\n\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}